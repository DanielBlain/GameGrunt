import { useState, useEffect, useCallback } from 'react'

const findMatch = (list, queryKey) => list.find(
    (queryObject) => queryObject.key === queryKey
)

/*****
 * 
 * useKeys
 * 
 * If initialKey (string) contains the key of an object
 * in the objectList (array), that object becomes the
 * selected object
 * 
 * Returns the key of a selected object, and a function
 * returning the selected object
 * 
 * The array ought to contain unique keys; otherwise,
 * only the object with the first matching key can
 * ever be selected
 * 
 * */
export function useKeys(objectList) {

    const [list, setList] = useState([...objectList])

    return [list, setList]
}