import { useState, useEffect } from 'react'

const findMatch = (list, queryKey) => list.find(
        (queryObject) => queryObject.key === queryKey
    )

/*****
 * 
 * useKeys
 * 
 * If initialKey (string) contains the key of an object
 * in the objectList (array), that object becomes the
 * selected object
 * 
 * Returns the key of a selected object, and a function
 * returning the selected object
 * 
 * The array ought to contain unique keys; otherwise, only
 * the object with the first matching key can ever be
 * selected
 * 
 * */
export function useKeys(objectList, initialKey) {

    const masterList = objectList
    const [selected, setSelected] = useState(null)
    const [key, setKey] = useState(initialKey)

    useEffect(() => {
        let match = findMatch(masterList, key)
        if (match) {
            setSelected(match)
        } else {
            setKey(null)
            setSelected(null)
        }
    }, [masterList, key])

    return [key, setKey, selected];
}